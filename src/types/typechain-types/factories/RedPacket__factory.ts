/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RedPacket, RedPacketInterface } from "../RedPacket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "packetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PacketClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "packetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRandom",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PacketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packetId",
        type: "uint256",
      },
    ],
    name: "claimRedPacket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRandom",
        type: "bool",
      },
    ],
    name: "createRedPacket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packetId",
        type: "uint256",
      },
    ],
    name: "getPacketDetails",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRandom",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "packetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "packets",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRandom",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50600280546001600160a01b031916331790555f6001556109b0806100325f395ff3fe60806040526004361061006e575f3560e01c8063873f6f9e1161004c578063873f6f9e146101135780638da5cb5b14610142578063bcb8f8f814610179578063d0a9e0c01461018c575f5ffd5b806309750509146100725780636656432e146100cf5780636de56271146100f0575b5f5ffd5b34801561007d575f5ffd5b5061009161008c366004610829565b6101e7565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c0015b60405180910390f35b3480156100da575f5ffd5b506100ee6100e9366004610829565b610260565b005b3480156100fb575f5ffd5b5061010560015481565b6040519081526020016100c6565b34801561011e575f5ffd5b5061013261012d366004610840565b6105c9565b60405190151581526020016100c6565b34801561014d575f5ffd5b50600254610161906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b610105610187366004610879565b610619565b348015610197575f5ffd5b506100916101a6366004610829565b5f602081905290815260409020805460018201546002830154600384015460048501546005909501546001600160a01b039094169492939192909160ff1686565b5f5f5f5f5f5f60015487106102175760405162461bcd60e51b815260040161020e906108a0565b60405180910390fd5b5050505f938452505050602081905260409020805460018201546002830154600384015460048501546005909501546001600160a01b039094169592949193909260ff90911690565b60015481106102815760405162461bcd60e51b815260040161020e906108a0565b5f81815260208190526040902060038101546102e95760405162461bcd60e51b815260206004820152602160248201527f526564207061636b657420686173206265656e2066756c6c7920636c61696d656044820152601960fa1b606482015260840161020e565b335f90815260068201602052604090205460ff161561035b5760405162461bcd60e51b815260206004820152602860248201527f596f75206861766520616c726561647920636c61696d6564207468697320726560448201526719081c1858dad95d60c21b606482015260840161020e565b80546001600160a01b031633036103c65760405162461bcd60e51b815260206004820152602960248201527f43726561746f722063616e6e6f7420636c61696d207468656972206f776e20726044820152681959081c1858dad95d60ba1b606482015260840161020e565b60058101545f9060ff161561049d5781600301546001036103ec575060018101546104b4565b5f4233856103fb6001436108eb565b40604051602001610437949392919093845260609290921b6bffffffffffffffffffffffff191660208401526034830152605482015260740190565b604051602081830303815290604052805190602001205f1c90505f6001846003015461046391906108eb565b61046e9060016108fe565b846001015461047d91906108eb565b90506104898183610929565b61049490600161093c565b925050506104b4565b816002015482600101546104b1919061094f565b90505b80826001015f8282546104c791906108eb565b925050819055506001826003015f8282546104e291906108eb565b9091555050335f818152600684016020526040808220805460ff191660011790555190919083908381818185875af1925050503d805f811461053f576040519150601f19603f3d011682016040523d82523d5f602084013e610544565b606091505b50509050806105875760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161020e565b60408051838152426020820152339186917fc1bdae7dfa6cad59014409091ad0529267e32ff06dddacf98a51685e559a72a4910160405180910390a350505050565b5f60015483106105eb5760405162461bcd60e51b815260040161020e906108a0565b505f828152602081815260408083206001600160a01b038516845260060190915290205460ff165b92915050565b5f5f831161067e5760405162461bcd60e51b815260206004820152602c60248201527f4e756d626572206f6620726564207061636b657473206d75737420626520677260448201526b06561746572207468616e20360a41b606482015260840161020e565b5f34116106de5760405162461bcd60e51b815260206004820152602860248201527f526564207061636b657420616d6f756e74206d75737420626520677265617465604482015267072207468616e20360c41b606482015260840161020e565b81610775576106ed8334610929565b156107755760405162461bcd60e51b815260206004820152604c60248201527f546f74616c20616d6f756e74206d75737420626520646976697369626c65206260448201527f7920746865206e756d626572206f6620726564207061636b65747320666f722060648201526b199a5e195908185b5bdd5b9d60a21b608482015260a40161020e565b600180545f81815260208190526040812080546001600160a01b031916331781553481850155600281018790556003810187905542600482015560058101805487151560ff19909116179055835492939092916107d183610962565b90915550506040805134815260208101879052851515818301524260608201529051339184917f62a2eab58a0ba2f85c5bfbff23417aa039d2bfc405b6cc1540f2a60f3ef652219181900360800190a3509392505050565b5f60208284031215610839575f5ffd5b5035919050565b5f5f60408385031215610851575f5ffd5b8235915060208301356001600160a01b038116811461086e575f5ffd5b809150509250929050565b5f5f6040838503121561088a575f5ffd5b823591506020830135801515811461086e575f5ffd5b60208082526019908201527f526564207061636b657420646f6573206e6f7420657869737400000000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610613576106136108d7565b8082028115828204841417610613576106136108d7565b634e487b7160e01b5f52601260045260245ffd5b5f8261093757610937610915565b500690565b80820180821115610613576106136108d7565b5f8261095d5761095d610915565b500490565b5f60018201610973576109736108d7565b506001019056fea26469706673582212206228b0ee100b605dd52f65bc5736065b7210b33cf7490b1135f373b78c196fcb64736f6c634300081c0033";

type RedPacketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedPacketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedPacket__factory extends ContractFactory {
  constructor(...args: RedPacketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RedPacket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RedPacket__factory {
    return super.connect(runner) as RedPacket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedPacketInterface {
    return new Interface(_abi) as RedPacketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RedPacket {
    return new Contract(address, _abi, runner) as unknown as RedPacket;
  }
}
